generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Punchline {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  unsolved  String[]
  solved    String
  year      Int
  solutions String[]
  artistId  Int
  songId    Int
  albumId   Int
  album     Album    @relation(fields: [albumId], references: [id])
  artist    Artist   @relation(fields: [artistId], references: [id])
  song      Song     @relation(fields: [songId], references: [id])
}

model Artist {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  solved      String      @unique
  solutions   String[]
  Album       Album[]
  Song        Song[]
  Punchline   Punchline[]
}

model Song {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  solved    String      @unique
  solutions String[]
  Artist    Artist[]
  Punchline Punchline[]
  Album     Album?      @relation(fields: [albumId], references: [id])
  albumId   Int?
}

model Album {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  solved    String      @unique
  solutions String[]
  Artist    Artist[]
  Punchline Punchline[]
  Song      Song[]
}
