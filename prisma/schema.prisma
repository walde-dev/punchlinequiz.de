generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Punchline {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    unsolved  String[]
    solved    String
    year      Int
    solutions String[]
    artistId  String
    songId    String
    albumId   String
    album     Album    @relation(fields: [albumId], references: [id])
    artist    Artist   @relation(fields: [artistId], references: [id])
    song      Song     @relation(fields: [songId], references: [id])
}

model Artist {
    id          String      @id @default(cuid())
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    solved      String
    solutions   String[]
    songId      String?
    albumId     String?
    punchlineId String?
    Album       Album?      @relation(fields: [albumId], references: [id])
    Song        Song?       @relation(fields: [songId], references: [id])
    Punchline   Punchline[]
}

model Song {
    id        String      @id @default(cuid())
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    solved    String
    solutions String[]
    Artist    Artist[]
    Punchline Punchline[]
}

model Album {
    id        String      @id @default(cuid())
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    solved    String
    solutions String[]
    Artist    Artist[]
    Punchline Punchline[]
}
